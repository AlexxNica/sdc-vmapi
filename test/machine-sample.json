{
  "zonename": "26437b2d-0eb2-40d2-9676-997c19160e91",
  "zonepath": "/zones/26437b2d-0eb2-40d2-9676-997c19160e91",
  "autoboot": true,
  "brand": "joyent",
  "limit_priv": "default",
  "create_timestamp": "2012-03-23T19:31:17.128Z",
  "dataset_uuid": "47e6af92-daf0-11e0-ac11-473ca1173ab0",
  "cpu_shares": 512,
  "zfs_io_priority": 20,
  "max_lwps": 1000,
  "max_physical_memory": 512,
  "max_locked_memory": 512,
  "max_swap": 1024,
  "cpu_cap": 150,
  "billing_id": "47e6af92-daf0-11e0-ac11-473ca1173ab0",
  "owner_uuid": "930896af-bf8c-48d4-885c-6573a94b1853",
  "tmpfs": 512,
  "dns_domain": "local",
  "alias": "mapi",
  "datasets": [
    "zones/26437b2d-0eb2-40d2-9676-997c19160e91/data"
  ],
  "nics": [
    {
      "interface": "net0",
      "mac": "b2:ee:11:7e:25:e2",
      "vlan_id": 0,
      "nic_tag": "admin",
      "ip": "10.99.99.8",
      "netmask": "255.255.255.0",
      "gateway": "10.99.99.7",
      "primary": true
    }
  ],
  "uuid": "26437b2d-0eb2-40d2-9676-997c19160e91",
  "compute_node_uuid": "564db185-7534-9ee3-523e-a28e18d63bd0",
  "zoneid": 8,
  "zone_state": "running",
  "state": "running",
  "quota": 10,
  "zfs_filesystem": "zones/26437b2d-0eb2-40d2-9676-997c19160e91",
  "zfs_storage_pool_name": "zones",
  "customer_metadata": {
    "assets-ip": "10.99.99.6",
    "sdc-datacenter-name": "coal",
    "sdc-datacenter-headnode-id": "0",
    "user-script": "#!/bin/bash\n#\n# Copyright (c) 2011, Joyent Inc. All rights reserved.\n#\n# This script exists to bootstrap the setup script which does most of the\n# work of setting up the zone. Nothing very time-expensive should go in here.\n# Put that in setup instead.\n#\n\nset -o xtrace\n\nPATH=/opt/local/bin:/opt/local/sbin:/usr/bin:/usr/sbin\n\nzone_uuid=$(zonename)\nzone_role=$(mdata-get sdc:tags.smartdc_role)\nif [[ -z ${zone_role} ]]; then\n    echo \"Unable to find zone role in metadata.\"\n    exit 1\nfi\nassets_ip=$(mdata-get assets-ip)\nif [[ -z ${assets_ip} ]]; then\n    echo \"Unable to find IP of assets server from metadata.\"\n    exit 1\nfi\n\nfatal() {\n    echo $* >&2\n    exit 1\n}\n\nif [[ ! -d /opt/smartdc/etc ]]; then\n    mkdir -p /opt/smartdc/etc || fatal \"unable to create /opt/smartdc/etc\"\nfi\nif [[ ! -d /opt/smartdc/bin ]]; then\n    mkdir -p /opt/smartdc/bin || fatal \"unable to create /opt/smartdc/bin\"\nfi\n\ncurl -k -o /opt/smartdc/etc/zoneconfig.new -s -S -f \\\n    http://${assets_ip}/extra/${zone_role}/zoneconfig\nif [[ $? != 0 ]]; then\n    echo \"Failed to get zoneconfig.\"\n    # For update, we carry on with old zoneconfig since we don't want to block\n    # of other smartdc_role zones when assets is down.  Setup should fail when\n    # zoneconfig doesn't exist.\nelse\n    cp /opt/smartdc/etc/zoneconfig.new /opt/smartdc/etc/zoneconfig && \\\n        rm -f /opt/smartdc/etc/zoneconfig.new\n    chmod 644 /opt/smartdc/etc/zoneconfig*\nfi\nif [[ ! -f /opt/smartdc/etc/zoneconfig ]]; then\n    fatal \"Missing zoneconfig\"\nfi\n\ncurl -k -o /opt/smartdc/bin/configure.new -s -S -f \\\n    http://${assets_ip}/extra/${zone_role}/configure\nif [[ $? != 0 ]]; then\n    echo \"Failed to get configure script.\"\n    # For update, we carry on with old configure since we don't want to block\n    # of other smartdc_role zones when assets is down.  Setup should fail when\n    # configure doesn't exist.\nelse\n    cp /opt/smartdc/bin/configure.new /opt/smartdc/bin/configure && \\\n        rm -f /opt/smartdc/bin/configure.new\n    chmod 755 /opt/smartdc/bin/configure*\nfi\n\n# Run the configure whenever we didn't do setup already\nif [[ -f /var/svc/setup_complete ]]; then\n    # We already did setup (which ran configure last time), so just reconfigure\n    /opt/smartdc/bin/configure || fatal \"failed to configure zone.\"\nfi\n\n# Only want to run this initial user-script once\nif [[ -f /var/svc/.ran-user-script ]]; then\n    echo \"Initial user-script has already been run.\"\n    exit 0\nfi\ntouch /var/svc/.ran-user-script\n\ncurl -k -o /var/svc/setup.common -s -S -f http://${assets_ip}/extra/${zone_role}/setup.common\nif [[ $? != 0 || ! -f /var/svc/setup.common ]]; then\n    echo \"Failed to get common include for setup script.\"\nfi\n\ncurl -k -o /var/svc/setup -s -S -f http://${assets_ip}/extra/${zone_role}/setup\nif [[ $? != 0 || ! -f /var/svc/setup ]]; then\n    echo \"Failed to get setup script.\"\nfi\n\nexport ASSETS_IP=\"${assets_ip}\"\nexport ZONE_ROLE=\"${zone_role}\"\n\n# We can't add any site-specific manifests automatically, since we're running\n# after the manifest import, so import any new manifests that were added.\n(bash /var/svc/setup\n    for manifest in $(ls -1 /lib/svc/manifest/site/*.xml); do\n        svccfg import ${manifest}\n    done\n) >/var/svc/setup.log 2>&1 &\n\nexit 0\n"
  },
  "internal_metadata": {
    "package_version": "1.0.0",
    "package_name": "sdc_512"
  },
  "tags": {
    "smartdc_role": "mapi"
  },
  "log": [
    {
      "timestamp": "2012-03-27T00:02:01.417Z",
      "message": "/usr/sbin/zoneadm -z 26437b2d-0eb2-40d2-9676-997c19160e91 -u 26437b2d-0eb2-40d2-9676-997c19160e91 list -p",
      "level": "info",
      "type": "message"
    },
    {
      "timestamp": "2012-03-27T00:02:01.456Z",
      "message": "loaded: {\"zoneid\":8,\"zonename\":\"26437b2d-0eb2-40d2-9676-997c19160e91\",\"state\":\"running\",\"zonepath\":\"/zones/26437b2d-0eb2-40d2-9676-997c19160e91\",\"uuid\":\"26437b2d-0eb2-40d2-9676-997c19160e91\",\"brand\":\"joyent\",\"ip_type\":\"excl\"}",
      "level": "info",
      "type": "message"
    },
    {
      "timestamp": "2012-03-27T00:02:01.456Z",
      "message": "getZoneRecords(26437b2d-0eb2-40d2-9676-997c19160e91) ignoring line: ",
      "level": "info",
      "type": "message"
    },
    {
      "timestamp": "2012-03-27T00:02:01.457Z",
      "message": "/usr/sbin/zfs list -H -p -t volume,filesystem -o name,quota,volsize,mountpoint,type",
      "level": "info",
      "type": "message"
    },
    {
      "timestamp": "2012-03-27T00:02:01.492Z",
      "message": "loadDatasetQuota(): ignoring line: ",
      "level": "info",
      "type": "message"
    },
    {
      "timestamp": "2012-03-27T00:02:01.492Z",
      "message": "/usr/bin/sysinfo",
      "level": "info",
      "type": "message"
    },
    {
      "timestamp": "2012-03-27T00:02:01.537Z",
      "message": "leaving preloadZoneData()",
      "level": "info",
      "type": "message"
    },
    {
      "timestamp": "2012-03-27T00:02:01.544Z",
      "message": "loadMetadata() loading metadata from /zones/26437b2d-0eb2-40d2-9676-997c19160e91/config/metadata.json",
      "level": "info",
      "type": "message"
    },
    {
      "timestamp": "2012-03-27T00:02:01.545Z",
      "message": "loadTags() loading tags from /zones/26437b2d-0eb2-40d2-9676-997c19160e91/config/tags.json",
      "level": "info",
      "type": "message"
    },
    {
      "timestamp": "2012-03-27T00:02:01.546Z",
      "message": "found quota \"10\" for 26437b2d-0eb2-40d2-9676-997c19160e91",
      "level": "info",
      "type": "message"
    },
    {
      "timestamp": "2012-03-27T00:02:01.546Z",
      "message": "found dataset \"zones/26437b2d-0eb2-40d2-9676-997c19160e91\" for 26437b2d-0eb2-40d2-9676-997c19160e91",
      "level": "info",
      "type": "message"
    }
  ]
}